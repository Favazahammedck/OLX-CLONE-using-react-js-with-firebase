{"ast":null,"code":"'use strict';\n\nvar Promise = require('bluebird');\n\nvar generateId = require('./generate-id');\n\nvar ID_LENGTH = 8;\nvar ID_PREFIX = '__aSyNcId_<_';\nvar ID_SUFFIX = '__';\n\nfunction resolve(cache, fn, context) {\n  var id = ID_PREFIX + generateId(ID_LENGTH) + ID_SUFFIX;\n  cache[id] = new Promise(function (passed, failed) {\n    try {\n      fn(context, function (res) {\n        passed(res);\n      });\n    } catch (error) {\n      failed(error);\n    }\n  });\n  return id;\n}\n\nfunction done(cache, callback) {\n  Promise.props(cache).then(function (values) {\n    callback(null, values);\n  }).catch(function (error) {\n    callback(error);\n  });\n}\n\nfunction hasResolvers(text) {\n  if (text.search(ID_PREFIX) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  done: done,\n  hasResolvers: hasResolvers,\n  resolve: resolve\n};","map":{"version":3,"sources":["/Users/arif/node_modules/express-hbs/lib/resolver.js"],"names":["Promise","require","generateId","ID_LENGTH","ID_PREFIX","ID_SUFFIX","resolve","cache","fn","context","id","passed","failed","res","error","done","callback","props","then","values","catch","hasResolvers","text","search","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AAEA,IAAIE,SAAS,GAAG,CAAhB;AACA,IAAIC,SAAS,GAAG,cAAhB;AACA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,EAAxB,EAA4BC,OAA5B,EAAqC;AACnC,MAAIC,EAAE,GAAGN,SAAS,GAAGF,UAAU,CAACC,SAAD,CAAtB,GAAoCE,SAA7C;AACAE,EAAAA,KAAK,CAACG,EAAD,CAAL,GAAY,IAAIV,OAAJ,CAAY,UAASW,MAAT,EAAiBC,MAAjB,EAAyB;AAC/C,QAAI;AACFJ,MAAAA,EAAE,CAACC,OAAD,EAAU,UAASI,GAAT,EAAc;AACxBF,QAAAA,MAAM,CAACE,GAAD,CAAN;AACD,OAFC,CAAF;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdF,MAAAA,MAAM,CAACE,KAAD,CAAN;AACD;AACF,GARW,CAAZ;AASA,SAAOJ,EAAP;AACD;;AAED,SAASK,IAAT,CAAcR,KAAd,EAAqBS,QAArB,EAA+B;AAC7BhB,EAAAA,OAAO,CAACiB,KAAR,CAAcV,KAAd,EAAqBW,IAArB,CAA0B,UAASC,MAAT,EAAiB;AACzCH,IAAAA,QAAQ,CAAC,IAAD,EAAOG,MAAP,CAAR;AACD,GAFD,EAEGC,KAFH,CAES,UAASN,KAAT,EAAgB;AACvBE,IAAAA,QAAQ,CAACF,KAAD,CAAR;AACD,GAJD;AAKD;;AAED,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAIA,IAAI,CAACC,MAAL,CAAYnB,SAAZ,IAAyB,CAA7B,EAAgC;AAC9B,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAEDoB,MAAM,CAACC,OAAP,GAAiB;AACfV,EAAAA,IAAI,EAAEA,IADS;AAEfM,EAAAA,YAAY,EAAEA,YAFC;AAGff,EAAAA,OAAO,EAAEA;AAHM,CAAjB","sourcesContent":["'use strict';\n\nvar Promise = require('bluebird');\n\nvar generateId = require('./generate-id');\n\nvar ID_LENGTH = 8;\nvar ID_PREFIX = '__aSyNcId_<_';\nvar ID_SUFFIX = '__';\n\nfunction resolve(cache, fn, context) {\n  var id = ID_PREFIX + generateId(ID_LENGTH) + ID_SUFFIX;\n  cache[id] = new Promise(function(passed, failed) {\n    try {\n      fn(context, function(res) {\n        passed(res);\n      });\n    } catch (error) {\n      failed(error);\n    }\n  });\n  return id;\n}\n\nfunction done(cache, callback) {\n  Promise.props(cache).then(function(values) {\n    callback(null, values);\n  }).catch(function(error) {\n    callback(error);\n  });\n}\n\nfunction hasResolvers(text) {\n  if (text.search(ID_PREFIX) > 0) {\n    return true;\n  }\n  return false;\n}\n\nmodule.exports = {\n  done: done,\n  hasResolvers: hasResolvers,\n  resolve: resolve\n};\n"]},"metadata":{},"sourceType":"script"}